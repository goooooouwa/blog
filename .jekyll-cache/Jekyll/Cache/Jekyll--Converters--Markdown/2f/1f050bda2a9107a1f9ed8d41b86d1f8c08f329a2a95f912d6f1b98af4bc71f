I"Ì<h1 id="ruby-on-rails---how-devise-methods-are-available-in-applicationcontrollerrb">ruby on rails - How devise methods are available in ApplicationController.rb</h1>

<p>Devise::Controllerè·ŸApplicationControlleræ²¡æœ‰ç»§æ‰¿å…³ç³»</p>

<p><code class="language-plaintext highlighter-rouge">ApplicationController</code> inherits from <code class="language-plaintext highlighter-rouge">ActionController::Base</code>, which   defines a number of helpful methods. <a href="https://guides.rubyonrails.org/action_controller_overview.html#methods-and-actions">ref</a>
<code class="language-plaintext highlighter-rouge">Devise::Controller</code> has a several modules thatâ€™s hooked up in to <code class="language-plaintext highlighter-rouge">ActionController</code> on_load. 
For example the <code class="language-plaintext highlighter-rouge">Devise::Controller::Helpers</code> module defines and loads helpers below:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#   Generated methods:
#     authenticate_user!  # Signs user in or redirect
#     authenticate_admin! # Signs admin in or redirect
#     user_signed_in?     # Checks whether there is a user signed in or not
#     admin_signed_in?    # Checks whether there is an admin signed in or not
#     current_user        # Current signed in user
#     current_admin       # Current signed in admin
#     user_session        # Session data available only to the user scope
#     admin_session       # Session data available only to the admin scope
#
#   Use:
#     before_action :authenticate_user!  # Tell devise to use :user map
#     before_action :authenticate_admin! # Tell devise to use :admin map
</code></pre></div></div>
:ET