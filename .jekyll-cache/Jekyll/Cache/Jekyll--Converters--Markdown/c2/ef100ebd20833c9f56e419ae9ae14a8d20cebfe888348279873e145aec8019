I"¾	<p>Demo on two way binding problem</p>

<h2 id="why-is-state-management-all-of-a-sudden-such-an-important-topic">Why is state management all of a sudden such an important topic?</h2>

<p>As the requirements for JavaScript single-page applications have become increasingly complicated, <strong>our code must manage more state than ever before</strong>. Managing this ever-changing state is hard. If a model can update another model, then a view can update a model, which updates another model, and this, in turn, might cause another view to update.</p>

<p>http://redux.js.org/docs/introduction/Motivation.html</p>

<h2 id="what-is-redux-really">What is Redux, really?</h2>

<p>Redux a predictable state container. It serves only one purpose: manage a state tree. It does one thing only: new_state = root_reducer(old_state, action)`.</p>

<h2 id="what-is-redux-not">What is Redux not?</h2>

<p>Redux is not a full web framework or persistance solution. Redux is conceptually different from the traditional Model layer in MVC.</p>

<h2 id="do-i-need-redux">Do I need Redux?</h2>

<p>Probably not. Certain scenarios are quite suitable.</p>

<p>https://medium.com/swlh/the-case-for-flux-379b7d1982c6#.fih7um7po</p>

<h2 id="what-is-functional-programming-what-is-reactive-programming">What is functional programming? What is Reactive Programming?</h2>

<p>https://en.wikipedia.org/wiki/Functional_programming
https://en.wikipedia.org/wiki/Reactive_programming</p>

<h2 id="what-has-redux-to-do-with-flux-react-rx">What has Redux to do with Flux? React? Rx?</h2>

<p>http://redux.js.org/docs/introduction/PriorArt.html
http://redux.js.org/docs/basics/UsageWithReact.html</p>

<h2 id="caveats">Caveats</h2>
<ul>
  <li>How is an action dispatched?<br />
Each time an action is dispatched, the root reducer will cascadingly call all other reducers with the action and the state slice http://redux.js.org/docs/basics/DataFlow.html</li>
  <li>How to subscribe to single property change in Redux store?<br />
There is no way to subscribe to part of the store when using subscribe directly, but as the creator of Redux says himself - donâ€™t use subscribe directly! http://redux.js.org/docs/api/Store.html#subscribe</li>
  <li>Can I do two way data binding in Redux? How?<br />
Yes, you can. For a two way binding between property A and B. You need to check if property A is changed in subscribe() change listener, and if itâ€™s changed, you dispatch an action to change property B, vise versa.</li>
</ul>
:ET